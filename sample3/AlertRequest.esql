

CREATE COMPUTE MODULE SMSAlertRequest_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
					
		SET Environment.Variables.AlertConfig[]  = 	(SELECT T.*  FROM Database.ALERTCONFIG  AS T  WHERE T.ALERTNUM=InputRoot.MRM.AlertNumber);
		SET Environment.Variables.AlertContact[] = 	(SELECT T.*  FROM Database.ALERTCONTACT AS T  WHERE T.ALERTNUM=InputRoot.MRM.AlertNumber);
		
		  SET OutputRoot.MQMD.Expiry = 3000;
		  IF CARDINALITY(Environment.Variables.AlertConfig[]) > 0   THEN
		  	
				IF (TRIM(Environment.Variables.AlertConfig.STATUS) = 'R' AND  TRIM(Environment.Variables.AlertConfig.DESTINATIONQMGR) <> '' AND  TRIM(Environment.Variables.AlertConfig.DESITINATIONQUEUE) <> '') THEN
					
					SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagerName = TRIM(Environment.Variables.AlertConfig.DESTINATIONQMGR);
					SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName        = 'EAI.CHECK.MESSAGE.COUNT.REQUEST';
					SET OutputRoot.MQMD.ReplyToQ    										   = 'ALERT.REPLY';
					SET OutputRoot.MQMD.ReplyToQMgr                                            = 'EAI.QMGR.ALIAS';
					SET OutputRoot.Properties.MessageSet 									   = 'ITEB53O002001';
					SET OutputRoot.Properties.MessageFormat 								   = 'CWF1';
					SET OutputRoot.Properties.MessageType 									   = 'Forward';
					SET OutputRoot.MRM.AlertNumber 											   = Environment.Variables.AlertConfig.ALERTNUM ;
					SET OutputRoot.MRM.QueueName 											   = TRIM(Environment.Variables.AlertConfig.DESITINATIONQUEUE) ;
					
					UPDATE Database.ALERTCONFIG AS T  SET STATUS = 'S',UPDATETIME = CURRENT_TIMESTAMP WHERE T.ALERTNUM   = Environment.Variables.AlertConfig.ALERTNUM ;
					RETURN TRUE;
					
				 ELSEIF TRIM(Environment.Variables.AlertConfig.STATUS) = 'S' THEN
								
					
						UPDATE Database.ALERTCONFIG AS T  SET STATUS = 'E',UPDATETIME = CURRENT_TIMESTAMP      WHERE T.ALERTNUM   = Environment.Variables.AlertConfig.ALERTNUM ;	
						
						
						DECLARE I INTEGER 0;			
						DECLARE AlertContactPointer REFERENCE TO Environment.Variables.AlertContact;
						WHILE (LASTMOVE(AlertContactPointer)) DO
							
							SET I = I + 1;
							CALL CopyMessageHeaders(); 	
						
							IF ( TRIM(Environment.Variables.AlertContact[I].MSDN) <> '' AND TRIM(Environment.Variables.AlertConfig.MESSAGE) <> '' ) THEN
						
							
								DECLARE SMSMessage CHAR ( TRIM(Environment.Variables.AlertContact[I].MSDN) || ',EAI,'  || TRIM(Environment.Variables.AlertContact.MESSAGESEVRITY) || '    ' || TRIM(Environment.Variables.AlertConfig.MESSAGE)) ;
								SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName        = 'SMS.MESSAGE.REQUEST.BE';
								SET OutputRoot.Properties.MessageSet 									   = 'ITEB53O002001';
								SET OutputRoot.Properties.MessageFormat 								   = 'CWF1';
								SET OutputRoot.Properties.MessageType 									   = 'Response';
								SET OutputRoot.MRM.SMSMessage 											   =  SUBSTRING(SMSMessage FROM 1 FOR 160) ;
																	
								PROPAGATE;
						
							END IF;
						
						
										
							IF (TRIM(Environment.Variables.AlertContact[I].EMAILADDRESS) <> '' AND TRIM(Environment.Variables.AlertConfig.EMAILTEXT) <> '' ) THEN
		
								SET OutputRoot											 			       =  InputRoot ;
								SET OutputRoot.MRM														   =  NULL ;
								SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName        = 'EMAIL.REQUEST';
								SET OutputRoot.Properties.MessageDomain 								   = 'XML';
								SET OutputRoot.Properties.MessageFormat 								   = 'XML';
								SET OutputRoot.Properties.MessageType 									   = '';
								SET OutputRoot.XML.EE_EAI_MESSAGE.From 									   = 'eai@sbm.net.sa';
								SET OutputRoot.XML.EE_EAI_MESSAGE.To 	   								   =  TRIM(Environment.Variables.AlertContact[I].EMAILADDRESS) ;
								SET OutputRoot.XML.EE_EAI_MESSAGE.Subject  								   =  TRIM(Environment.Variables.AlertConfig.EMAILSUBJECT) ;
								SET OutputRoot.XML.EE_EAI_MESSAGE.Body 									   =  TRIM(Environment.Variables.AlertConfig.EMAILTEXT) ;
					
								PROPAGATE;
							
							END IF;
						
						MOVE AlertContactPointer NEXTSIBLING;
						END WHILE;
						
					  	RETURN FALSE;
						
				  ELSEIF TRIM(Environment.Variables.AlertConfig.STATUS) = 'E' OR TRIM(Environment.Variables.AlertConfig.STATUS) = '' THEN
				  			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagerName = TRIM(Environment.Variables.AlertConfig.DESTINATIONQMGR);
							SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName        = 'EAI.CHECK.MESSAGE.COUNT.REQUEST';
							SET OutputRoot.MQMD.ReplyToQ    										   = 'ALERT.REPLY';
							SET OutputRoot.MQMD.ReplyToQMgr                                            = 'EAI.QMGR.ALIAS';
							SET OutputRoot.Properties.MessageSet 									   = 'ITEB53O002001';
							SET OutputRoot.Properties.MessageFormat 								   = 'CWF1';
							SET OutputRoot.Properties.MessageType 									   = 'Forward';
							SET OutputRoot.MRM.AlertNumber 											   = Environment.Variables.AlertConfig.ALERTNUM ;
							SET OutputRoot.MRM.QueueName 											   = TRIM(Environment.Variables.AlertConfig.DESITINATIONQUEUE) ;
				  	
					
							RETURN TRUE;											
			
				  END IF;
				 
		 ELSE
				
				RETURN FALSE;	 
			
		 END IF;
		
		
		 
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
