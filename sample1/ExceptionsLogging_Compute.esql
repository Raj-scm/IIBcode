

CREATE COMPUTE MODULE ExceptionsLogging_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
 
			SET Environment.Variables.dbquery =
                                PASSTHRU('INSERT INTO SR_PAYMENT_EXCEPTIONS_TBL (MSG_ID,SR_ID,CHANNELTRANSID,LINENUMBER,EXCEPTION, TIME_STAMP) VALUES (?,?,?,?,?,?)'   VALUES
                                 ( SUBSTRING(CAST(InputRoot.MQMD.MsgId AS CHARACTER) FROM 3 FOR 48)  ,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.SR_ID ,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.ChannelTransId,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.LineNumber, 
                                 ASBITSTREAM(InputRoot.XMLNSC ENCODING InputRoot.Properties.Encoding CCSID 1208),
                                 CURRENT_TIMESTAMP));
            SET Environment.Variables.dbqueryerror =
                                PASSTHRU('INSERT INTO SR_PAYMENT_REPLAY_TBL (MSG_ID, SR_ID, CHANNEL_TRANS_ID, LINE_NUMBER, MESSAGE, SOURCE_QUEUE, TIME_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?)'   VALUES
                                 ( SUBSTRING(CAST(InputRoot.MQMD.MsgId AS CHARACTER) FROM 3 FOR 48)  ,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.SR_ID ,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.ChannelTransId,
                                 InputRoot.XMLNSC.FAULT_MESSAGE.LineNumber, 
                                 ASBITSTREAM(InputRoot.XMLNSC.FAULT_MESSAGE.ORIGINAL_MESSAGE.XMLNSC ENCODING InputRoot.Properties.Encoding CCSID 1208),
                                 InputRoot.XMLNSC.FAULT_MESSAGE.SOURCE_QUEUE,CURRENT_TIMESTAMP));                           
      
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
